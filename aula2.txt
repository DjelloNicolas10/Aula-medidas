Guia unidades de medidas no CSS: Quando usar cada uma.

1. px (pixels)

Uso recomendado
para tamanhos fixos e precisos que não devem variar com o tamanho de tela ou do texto.
ideal para BORDAS, MARGENS  e tamanhos de elementos que precisam MANTER uma aparência CONSISTENTE.

Quando EVITAR
Quando você deseja que o design seja mais flexivel e adaptável a diferentes tamanhos de tela e configurações de acessibilidade.

Exemplo de Uso
html
<div class="box"

</div>

css
.box {
    width: 300px; /*Largura fixa*/
    height: 200px; /*Altura fixa*/
    background-color: red;
}



2. rem (Relative to parent font-size)

Uso recomendado
Quando você deseja que o tamanho de um elemento seja relativo ao tamanho da fonte de seu elemento pai.
Ideal para criar layouts et tipografia que se adaptam ao tamanho do texto do pai.

Quando EVITAR
Se você precisa de Consistencia en relação ao tamanho da fonte em toda a aplicação, independente da hierarquia de elementos.

Exemplo de Uso

html
<div class="container">
    <div class="child"

    </div>

</div>

css
.container {
    font-size: 16px; /*Tamanho base - pai*/
}

.child {
    font-size: 1.5em; /*1.5 vezes o tamanho da fonte do pai (24px)*/
}



3. rem (Relative to root Font-size)

Uso recomendado
para criar tamanhos de fonte e espaçamentos consistentes em toda a aplicação, baseando-se no tamanho da fonte raiz (<htm>)

Ideal para layouts e tipografia que precisam ser consistentes independente do tamanho da fonte dos elementos pais.

Quando EVITAR:
Quando você quer um tamanho que seja relativo apenas ao elementos pai específico e não à raiz.

Exemplo de Uso

html
<div class="container">
    
    <div class="text">
        <p> Lorem </p>
    </div>
</div>

css
html {
    font-size: 16px; /*Tamanho base da fonte*/
}

.text {
    font-size: 2rem; /*32px (2 *16px)
}



4. vh (Viewport Height)

Uso recomendado:
Para definir tamanhos de altura relativos à altura da viewport, como para criar seções de tela cheia ou elementos que devem ocupar uma porcentagem da altura de tela.

Ideal para layouts que devem se ajustar  a altura da tela do usuário.

Quando EVITAR
para elementos que não precisam ser sensíveis ao tamanho da viewport e devem ter

Exemplo de Uso
html
<section class="fullscreen-section">
         <p> lorem</p>
    </section>
testar em tamanhos da telas diferentes.

css

.fullscreen-section{
    height: 100vh; /*100% da altura da viewport*/
    width: 50vw 
    background-color: black;
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

5. vw (viewport width)

Uso recomendado:
Para definir tamanhos de largura relativos à largura da viewport, útil para criar layouts responsivos ou elementos que devem ajustar a largura da tela.

Ideal para elementos que precisam ocupar uma porcentagem da largura da tela do usuário.

Quando EVITAR 
Para elementos cuja largura não deve depender da largura da viewport e deve ser fixa ou proporcional ao conteúdo.,

Exemplo de Uso

html
<section class="responsive-element">
         <p> lorem</p>
    </section>

css
.responsive-element {
    width: 50vh; /*50% da largura da viewport
    height: 40vh;
    background-color: yellow;
}


6. % (percentual)

Uso recomendado:
para definir tamanhos relativos ao tamanho do elemento pai, ideal para layouts flexíveis e adaptáveis.
Útil para definir larguras e alturas de elemento dentro de containers com tamanhos variárveis.

Quando EVITAR:
Quando o tamanho não deve depender do elemento pai, especialmente se o elemento pai não tiver um tamanho fixo ou previsível.

Exemplo de Uso:

html 
<div class-"parent">
     <div class="child"
     </div>
</div>

css
.parent {
    width: 500px; /*largura fixa do elemento pai*/
    background-color; pink;
}

.;child {
    width: 50%; /*50% da largura do elemento pai (250px)
    background-color: pink;
}